{"meta":{"title":"Hexo","subtitle":"","description":"face mask","author":"John Doe","url":"https://babyhux.github.io/hexoblog","root":"/hexoblog/"},"pages":[],"posts":[{"title":"python命令","slug":"python命令","date":"2020-05-20T06:15:11.000Z","updated":"2020-05-20T06:40:37.941Z","comments":true,"path":"2020/05/20/python命令/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/05/20/python%E5%91%BD%E4%BB%A4/","excerpt":"","text":"##大概记录下安装包的语句pip install 包名更新pip工具python -m pip install –upgrade pip查看包的路径和依赖pip show 包名查看包的命令帮助包名-h根据文本安装 pip install -r requirement.txt ##任务框架APSchedulerAPScheduler是Python的一个定时任务框架，用于执行周期或者定时任务，可以基于日期、时间间隔，及类似于Linux上的定时任务crontab类型的定时任务；该该框架不仅可以添加、删除定时任务，还可以将任务存储到数据库中，实现任务的持久化，使用起来非常方便。安装方式：pip install apschedulerapscheduler组件及简单说明： 1&gt;triggers（触发器）：触发器包含调度逻辑，每一个作业有它自己的触发器2&gt;job stores（作业存储）:用来存储被调度的作业，默认的作业存储器是简单地把作业任务保存在内存中,支持存储到MongoDB，Redis数据库中3&gt; executors（执行器）：执行器用来执行定时任务，只是将需要执行的任务放在新的线程或者线程池中运行4&gt;schedulers（调度器）：调度器是将其它部分联系在一起,对使用者提供接口，进行任务添加，设置，删除。 来看一个简单例子：‘’’import timefrom apscheduler.schedulers.blocking import BlockingSchedulerdef func(): now = datetime.datetime.now() ts = now.strftime(‘%Y-%m-%d %H:%M:%S’) print(‘do func time :’,ts) def func2(): #耗时2S now = datetime.datetime.now() ts = now.strftime(‘%Y-%m-%d %H:%M:%S’) print(‘do func2 time：’,ts) time.sleep(2) def dojob(): #创建调度器：BlockingScheduler scheduler = BlockingScheduler() #添加任务,时间间隔2S scheduler.add_job(func, ‘interval’, seconds=2, id=’test_job1’) #添加任务,时间间隔5S scheduler.add_job(func2, ‘interval’, seconds=3, id=’test_job2’) scheduler.start()dojob()‘’’输出结果： do func time : 2019-03-22 10:32:20do func2 time： 2019-03-22 10:32:21do func time : 2019-03-22 10:32:22do func time : 2019-03-22 10:32:24do func2 time： 2019-03-22 10:32:24do func time : 2019-03-22 10:32:26","categories":[],"tags":[]},{"title":"开始写小说","slug":"开始写小说","date":"2020-05-06T05:58:53.000Z","updated":"2020-05-06T06:05:02.612Z","comments":true,"path":"2020/05/06/开始写小说/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/05/06/%E5%BC%80%E5%A7%8B%E5%86%99%E5%B0%8F%E8%AF%B4/","excerpt":"","text":"记录下学习的走过的路谷歌云开好服务器 amd的新机子抢不到 就用intel的测试了系统用的是debian 9shell进去后 12345sudo apt install python3-dev python3-pip # or python3-dev python3-pippip3 install -U --user six numpy wheel setuptools mock &#39;future&gt;&#x3D;0.17.1&#39; pip3 install -U --user keras_applications --no-deps pip3 install -U --user keras_preprocessing --no-deps 先用这个安装好基本的库然后来这里选择对应的tf版本 这里真的走了太多的弯路 1https:&#x2F;&#x2F;github.com&#x2F;lakshayg&#x2F;tensorflow-build 早上的时间都花在怎么编译对应的tf了suu用的tf是1.5的 需要的编译器是bazel0.8的 0.8的bazelisk又切换不到自己编译出错切换出错java出错哎还好找到编译好的 找到编译好了的之后直接就是pip3 install **.whl然后git clone下suu 1https:&#x2F;&#x2F;github.com&#x2F;babyhux&#x2F;SunRnn 修改requiremen 去掉里面的tf 1.3继续 pip3 install -r requirement.txt就OK啦","categories":[],"tags":[]},{"title":"从0开始的python","slug":"从0开始的python","date":"2020-04-23T07:48:41.000Z","updated":"2020-04-25T00:48:08.069Z","comments":true,"path":"2020/04/23/从0开始的python/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/23/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E7%9A%84python/","excerpt":"","text":"1先打印出来吧 这里慢慢修改 2可以打印出各种数据了再查看下页面怎么处理 3昨天在家里给弄好了整个代码其实不多给传到这里吧 123456789101112131415161718192021222324252627282930313233# -*- coding: UTF-8 -*-import reimport requestsimport osimport sysimport timeimport jsonimport mathimport you_getdef getVideoInfo(bilibiliUserId): headers &#x3D; &#123;&#39;User-agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;63.0.3239.132 Safari&#x2F;537.36&#39;&#125; videoUrl &#x3D; &#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;space&#x2F;navnum?mid&#x3D;&#39;+bilibiliUserId getPage &#x3D; requests.get(videoUrl, headers&#x3D;headers) x &#x3D; getPage.json() pageNumber &#x3D; math.ceil(x[&#39;data&#39;][&#39;video&#39;] &#x2F; 30) i &#x3D; 0 path &#x3D; &#39;d:&#x2F;temp&#39; while i &lt; pageNumber: i &#x3D; i + 1 bilibiliUrl &#x3D; &#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;space&#x2F;arc&#x2F;search?mid&#x3D;&#39; + bilibiliUserId + &#39;&amp;ps&#x3D;30&amp;tid&#x3D;0&amp;pn&#x3D; &#39;+ str(i+1)+&#39; &amp;keyword&#x3D;&amp;order&#x3D;pubdate&amp;jsonp&#x3D;jsonp&#39; getContent &#x3D; requests.get(bilibiliUrl, headers&#x3D;headers) x2 &#x3D; getContent.json() for items in x2[&#39;data&#39;][&#39;list&#39;][&#39;vlist&#39;]: pageUrl &#x3D; &#39;https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;&#39; + items[&#39;bvid&#39;] sys.argv &#x3D; [&#39;you-get&#39;, &#39;-o&#39;, path, pageUrl] print(items[&#39;author&#39;] + &#39; - &#39; + items[&#39;title&#39;] + &#39;，视频ID &#x3D; &#39; + items[&#39;bvid&#39;]) you_get.main() if __name__ &#x3D;&#x3D; &quot;__main__&quot;: a &#x3D; input(&quot;请输入UP主的ID:&quot;) getVideoInfo(a)","categories":[],"tags":[]},{"title":"交水费","slug":"交水费","date":"2020-04-22T02:22:41.000Z","updated":"2020-04-22T02:25:19.959Z","comments":true,"path":"2020/04/22/交水费/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/22/%E4%BA%A4%E6%B0%B4%E8%B4%B9/","excerpt":"","text":"一种循环家里需要交水费，因为不能网上缴费，于是让老父亲去帮忙交下，他推给了他老伴他老伴推给我老伴，我老伴又推给我。什么情况嘛这是当初领取多的建筑缴费的时候，怎么就跑的这么快。","categories":[],"tags":[]},{"title":"bootcamp6","slug":"bootcamp6","date":"2020-04-16T05:40:46.000Z","updated":"2020-04-16T06:02:42.851Z","comments":true,"path":"2020/04/16/bootcamp6/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/16/bootcamp6/","excerpt":"","text":"事情起因因为找不到mba的密码，于是直接用pe把硬盘给重新分区掉然后直接uefi装的win10先安装驱动大师安装驱动再正常安装了各种软件 亮度调教因为无法使用鼠标及键盘快捷键于是开始寻找适合win10的bootcamp苹果官方支持中心找不到6的bootcamp 结果知道了需要6的bootcamp就搜索到了 drvsky的文件下载 安装即可","categories":[],"tags":[]},{"title":"japan-trade","slug":"japan-trade","date":"2020-04-15T06:06:09.000Z","updated":"2020-04-15T06:41:02.686Z","comments":true,"path":"2020/04/15/japan-trade/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/15/japan-trade/","excerpt":"","text":"平台1.雅虎、乐天、亚马逊就是淘宝级别的。mercari、fril、shoppies就是咸鱼转转级别的，说是二手，一手也很多人卖。流量都很大，自己熟悉哪个就用哪个。2.那边楼主自己选择的是fril平台 看起来是不错的 流量有 认证1.淘宝有认证 大概60就可以完成手机验证码认证","categories":[],"tags":[]},{"title":"Adobe-Acrobat-exit","slug":"Adobe-Acrobat-exit","date":"2020-04-15T03:50:56.000Z","updated":"2020-04-15T05:56:29.732Z","comments":true,"path":"2020/04/15/Adobe-Acrobat-exit/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/15/Adobe-Acrobat-exit/","excerpt":"","text":"方法1在hosts文件[C:\\Windows\\System32\\drivers\\etc]中添加如下： 1127.0.0.1 acroipm.adobe.com 即可，也就是将acroipm.adobe.com，给屏蔽掉。 步骤1.找到hosts文件 2.将文件打开(以记事本的方式打开)，添加“127.0.0.1 acroipm.adobe.com”至文件中。 若在打开hosts文件没有权限的时候，采取以下操作:1.找到hosts文件，并将其复制到桌面中2.将后缀名修改为(.txt）形式,3.写入内容，并保存","categories":[],"tags":[]},{"title":"'start'","slug":"start","date":"2020-04-11T02:52:06.000Z","updated":"2020-04-13T07:38:26.080Z","comments":true,"path":"2020/04/11/start/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/11/start/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-11T02:16:37.914Z","updated":"2020-04-11T02:16:37.914Z","comments":true,"path":"2020/04/11/hello-world/","link":"","permalink":"https://babyhux.github.io/hexoblog/2020/04/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}